{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f8253473-529b-4698-939c-db8a8ce5d61f",
   "metadata": {},
   "source": [
    "# Instructions:\n",
    "\n",
    "Create a list named 'shopping_list' to store the items.\n",
    "Use a while loop to create a menu of options for the user to add, remove, or view items from the list.\n",
    "Use the input() function to prompt the user to make a selection from the menu.\n",
    "Use an if-elif-else block to determine the user's selection and perform the corresponding action.\n",
    "If the user selects 'add', use the input() function to prompt the user to enter an item to add to the list. Use the range() function to limit the number of items that can be added to the list.\n",
    "If the user selects 'remove', use the input() function to prompt the user to enter an item to remove from the list.\n",
    "If the user selects 'view', use a for loop to iterate through the list of items and display them to the user.\n",
    "Use the list, tuple, set, and dictionary data structures to store and manipulate the shopping items."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7a2235c4-7546-40e8-b7ab-4a2a01068e01",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Welcome!!! Kindly choose from the display Menu:\n",
      "1. Add items\n",
      "2. Remove items\n",
      "3. View shopping list\n",
      "4. Exit\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number:  2\n",
      "Enter the item to be removed from the shopping list:  fredc\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Item is not in the shopping list. Make sure the item exists.\n",
      "\n",
      "Welcome!!! Kindly choose from the display Menu:\n",
      "1. Add items\n",
      "2. Remove items\n",
      "3. View shopping list\n",
      "4. Exit\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number:  3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Your Shopping List:\n",
      "1. toothpaste\n",
      "2. comb\n",
      "3. brush\n",
      "4. fish\n",
      "5. meat\n",
      "\n",
      "Welcome!!! Kindly choose from the display Menu:\n",
      "1. Add items\n",
      "2. Remove items\n",
      "3. View shopping list\n",
      "4. Exit\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number:  3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Your Shopping List:\n",
      "1. toothpaste\n",
      "2. comb\n",
      "3. brush\n",
      "4. fish\n",
      "5. meat\n",
      "\n",
      "Welcome!!! Kindly choose from the display Menu:\n",
      "1. Add items\n",
      "2. Remove items\n",
      "3. View shopping list\n",
      "4. Exit\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number:  3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Your Shopping List:\n",
      "1. toothpaste\n",
      "2. comb\n",
      "3. brush\n",
      "4. fish\n",
      "5. meat\n",
      "\n",
      "Welcome!!! Kindly choose from the display Menu:\n",
      "1. Add items\n",
      "2. Remove items\n",
      "3. View shopping list\n",
      "4. Exit\n"
     ]
    }
   ],
   "source": [
    "shopping_list = ['toothpaste', 'comb', 'brush', 'fish', 'meat']\n",
    "\n",
    "def display_menu():\n",
    "    print('\\nWelcome!!! Kindly choose from the display Menu:')\n",
    "    print('1. Add items')\n",
    "    print('2. Remove items')\n",
    "    print('3. View shopping list')\n",
    "    print('4. Exit')\n",
    "\n",
    "while True:  # Loop to keep the program running until the user exits\n",
    "    display_menu()\n",
    "\n",
    "    # User input choice\n",
    "    choice = input('Enter a number: ').strip()\n",
    "    \n",
    "    if choice == '1':  # Add an item\n",
    "        if len(shopping_list) < 10:\n",
    "            item = input('Enter an item to add to the list: ').strip()\n",
    "            shopping_list.append(item)\n",
    "            print(f\"Your choice '{item}' has been added to the shopping list.\")\n",
    "        else:\n",
    "            print(\"Item cannot be added, shopping list is full.\")\n",
    "\n",
    "    elif choice == '2':  # Remove an item\n",
    "        if shopping_list:\n",
    "            item = input('Enter the item to be removed from the shopping list: ').strip()\n",
    "            if item in shopping_list:\n",
    "                shopping_list.remove(item)\n",
    "                print(f\"{item} has been removed from your shopping list.\")\n",
    "            else:\n",
    "                print(\"Item is not in the shopping list. Make sure the item exists.\")\n",
    "\n",
    "    elif choice == '3':  # View the shopping list\n",
    "        if shopping_list:\n",
    "            print(\"\\nYour Shopping List:\")\n",
    "            for idx, item in enumerate(shopping_list, start=1):\n",
    "                print(f\"{idx}. {item}\")\n",
    "        else:\n",
    "            print(\"Your shopping list is empty.\")\n",
    "\n",
    "    elif choice == '4':  # Exit\n",
    "        print(\"Exiting the shopping list program. Goodbye!\")\n",
    "        break\n",
    "\n",
    "    else:\n",
    "        print(\"Invalid choice. Please select a valid option (1-4).\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "94717e9d-017c-4529-bafc-dc94c4abce10",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
